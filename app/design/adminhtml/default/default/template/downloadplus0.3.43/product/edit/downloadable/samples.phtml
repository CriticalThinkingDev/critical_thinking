<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design_default
 * @package     Mage_Downloadable
 * @copyright   Copyright (c) 2008 Irubin Consulting Inc. DBA Varien (http://www.varien.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * @see Mage_Downloadable_Block_Adminhtml_Catalog_Product_Edit_Tab_Downloadable_Samples
 */
?>

<?php $_product = $this->getProduct() ?>
<div class="fieldset">
    <table cellspacing="0" class="form-list">
        <tbody>
            <tr class="headings">
                <td class="label"><label for="name"><?php echo $this->__('Title')?></label>
                </td>
                <td class="value">
                    <input type="text" class="input-text" name="product[samples_title]" value="<?php echo $_product->getId()?$_product->getSamplesTitle():$this->getSamplesTitle() ?>" <?php echo ($_product->getStoreId() && $this->getUsedDefault())?'disabled="disabled"':'' ?> />
                </td>
                <td class="scope-label"><?php if (!Mage::app()->isSingleStoreMode()) echo $this->__('[STORE VIEW]'); ?></td>
                <td class="value use-default">
                <?php if($_product->getStoreId()): ?>
                    <input id="sample_title_default" type="checkbox" name="use_default[]" value="samples_title" onclick="toggleValueElements(this, this.parentNode.parentNode)" <?php echo $this->getUsedDefault()?'checked="checked"':'' ?> />
                    <label class="normal" for="sample_title_default"><?php echo $this->__('Use Default Value') ?></label>
                <?php endif; ?>
                </td>
            </tr>
        </tbody>
    </table>
    <br />
    <div class="grid">
        <div class="hor-scroll">
            <table cellspacing="0" class="data border">
                <col />
                <col width="1" />
                <col width="1" />
                <col width="1" />
                <thead>
                    <tr class="headings">
                        <th><?php echo $this->__('Title') ?> <span class="required">*</span></th>
                        <th><?php echo $this->__('File') ?></th>
                        <th><span class="nobr"><?php echo $this->__('Sort Order') ?></span></th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <td colspan="4" class="a-right"><?php echo $this->getAddButtonHtml() ?>&nbsp;<?php echo $this->getUploadButtonHtml() ?></td>
                    </tr>
                </tfoot>
                <tbody id="sample_items_body">
                </tbody>
            </table>
            <div><small><?php echo $this->__('Alphanumeric, dash and underscore characters are recommended for filenames. Improper characters are replaced with \'_\'.')?></small></div>
        </div>
    </div>
</div>
<script type="text/javascript">
//<![CDATA[>
var sampleTemplate = '<tr>'+
                        '<td>'+
                            '<input type="hidden" class="__delete__" name="downloadable[sample][{{id}}][is_delete]" value="" />'+
                            '<input type="hidden" name="downloadable[sample][{{id}}][sample_id]" value="{{sample_id}}" />'+
                            '<input type="text" class="required-entry input-text" name="downloadable[sample][{{id}}][title]" value="{{title}}" />'+
                            '<?php echo $_product->getStoreId()?'<br /><input type="checkbox" id="downloadable_sample_{{id}}_title" name="downloadable[sample][{{id}}][use_default_title]" value="1" /><label class="normal" for="downloadable_sample_{{id}}_title">'.$this->__('Use Default Value').'</label>':'' ?>'+
                        '</td>'+
                        '<td>'+
                            '<div class="files-wide">'+
                                '<div class="row">'+
                                    '<label for="downloadable_sample_{{id}}_file_type"><input type="radio" class="radio validate-one-required-by-name" id="downloadable_sample_{{id}}_file_type" name="downloadable[sample][{{id}}][type]" value="file"{{file_checked}} /> <?php echo $this->__('File:') ?></label>'+
                                    '<input type="hidden" class="validate-downloadable-file" id="downloadable_sample_{{id}}_file_save" name="downloadable[sample][{{id}}][file]" value="{{file_save}}" />'+
                                    '<div id="downloadable_sample_{{id}}_file" class="uploader">'+
                                        '<div id="downloadable_sample_{{id}}_file-old" class="file-row-info"></div>'+
                                        '<div id="downloadable_sample_{{id}}_file-new" class="file-row-info new-file"></div>'+
                                        '<div class="buttons">'+
                                            '<div id="downloadable_sample_{{id}}_file-install-flash" style="display:none">'+
                                                '<?php echo Mage::helper('media')->__('This content requires last version of Adobe Flash Player. <a href="%s">Get Flash</a>', 'http://www.adobe.com/go/getflash/') ?>'+
                                            '</div>'+
                                        '</div>'+
                                        '<div class="clear"></div>'+
                                    '</div>'+
                                '</div>'+
                                '<div class="row">'+
                                    '<label for="downloadable_sample_{{id}}_url_type"><input type="radio" class="radio validate-one-required-by-name" id="downloadable_sample_{{id}}_url_type" name="downloadable[sample][{{id}}][type]" value="url"{{url_checked}} /> URL:</label> <input type="text" class="validate-downloadable-url input-text" name="downloadable[sample][{{id}}][sample_url]" id="downloadable_sample_{{id}}_sample_url" value="{{sample_url}}" />'+
                                '</div>'+
                                '<div>'+
                            	    '<span id="downloadable_sample_{{id}}_container"></span>'+
                            	'</div>'+
                                <?php if ($html = $this->toJSHtml($this->getLocalFileObjectsSelect('downloadable_sample_{{id}}_file_local_object', 'downloadable[sample][{{id}}][file_local_object]'))): ?>
	                          		'<div class="row">'+
	                      			'<label for="downloadable_sample_{{id}}_filelocal_type" class="file"><input type="radio" class="radio" id="downloadable_sample_{{id}}_filelocal_type" name="downloadable[sample][{{id}}][type]" value="file-local"{{filelocal_checked}} /> <?php echo $this->__('Local File:') ?></label>'+
	                          		'<?php echo $html; ?>'+
	                          		'</div>'+
	                          	<?php endif; ?>
                                <?php if ($html = $this->toJSHtml($this->getAmazonS3BucketsSelect('downloadable_sample_{{id}}_amazon_s3_bucket', 'downloadable[sample][{{id}}][amazon_s3_bucket]'))): ?>
	                            	'<div class="row">'+
	                      			'<label for="downloadable_sample_{{id}}_amazons3_type" class="aws"><input type="radio" class="radio" id="downloadable_sample_{{id}}_amazons3_type" name="downloadable[sample][{{id}}][type]" value="aws-s3"{{awss3_checked}} /> Amazon S3:</label>'+
	                          		'<?php echo $html; ?>'+
	                          		'<textarea class="textarea s3_file" name="downloadable[sample][{{id}}][amazon_s3_file]">{{amazon_s3_file}}</textarea>'+
	                      			'</div>'+
                      			<?php endif; ?>
                                <?php if ($html = $this->toJSHtml($this->getAmazonS3ObjectsSelect('downloadable_sample_{{id}}_amazon_s3_object', 'downloadable[sample][{{id}}][amazon_s3_object]'))): ?>
	                            	'<div class="row">'+
	                      			'<label for="downloadable_sample_{{id}}_amazons3_type" class="aws"><input type="radio" class="radio" id="downloadable_sample_{{id}}_amazons3_type" name="downloadable[sample][{{id}}][type]" value="aws-s3"{{awss3_checked}} /> Amazon S3:</label>'+
	                          		'<?php echo $html; ?>'+
	                      			'</div>'+
                          		<?php endif; ?>
                                <?php if ($html = $this->toJSHtml($this->getAmazonCloudfrontObjectsSelect('downloadable_sample_{{id}}_amazon_cf_object', 'downloadable[sample][{{id}}][amazon_cf_object]'))): ?>
	                            	'<div class="row">'+
	                      			'<label for="downloadable_sample_{{id}}_amazoncf_type" class="aws"><input type="radio" class="radio" id="downloadable_sample_{{id}}_amazoncf_type" name="downloadable[sample][{{id}}][type]" value="aws-cf"{{awscf_checked}} /> Amazon Cloudfront:</label>'+
	                          		'<?php echo $html; ?>'+
	                      			'</div>'+
                          		<?php endif; ?>
                        	   	'<div class="row">'+
                    	   		'<button id="test_link_url_{{id}}" type="button" class="scalable" onclick="sampleItems.testSampleUrl({{id}});"><span><?php echo $this->__('Test URL') ?></span></button>'+
                        	   	'</div>'+
                            '</div>'+

                        '</td>'+
                        '<td class="a-center"><input type="text" name="downloadable[sample][{{id}}][sort_order]" value="{{sort_order}}" class="input-text sort" /></td>'+
                        '<td>'+
                            '<button type="button" class="scalable delete icon-btn delete-sample-item"><span>Delete</span></button>'+
                        '</td>'+
                    '</tr>';
var sampleItems = {
    tbody : $('sample_items_body'),
    templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
    templateText : sampleTemplate,
    itemCount : 0,
    add : function(data) {
        alertAlreadyDisplayed = false;
        this.template = new Template(this.templateText, this.templateSyntax);

        if(!data.sample_id){
            data = {};
            data.sample_type = 'file';
            data.sample_id  = 0;
        }

        data.id = this.itemCount;

        if (data.sample_type == 'url') {
            data.url_checked = ' checked="checked"';
        } else if (data.sample_type == 'file') {
            data.file_checked = ' checked="checked"';
        } else if (data.sample_type == 'aws-s3') {
            data.awss3_checked = ' checked="checked"';
        } else if (data.sample_type == 'aws-cf') {
            data.awscf_checked = ' checked="checked"';
        } else if (data.sample_type == 'file-local') {
            data.filelocal_checked = ' checked="checked"';
        }

        Element.insert(this.tbody, {'bottom':this.template.evaluate(data)});

        scopeTitle = $('downloadable_sample_'+data.id+'_title');
        if (scopeTitle) {
            Event.observe(scopeTitle, 'click', function(event){
                scopeElm = $(Event.findElement(event, 'input'));
                titleField = scopeElm.up(0).down('input[type="text"]');
                if (scopeElm.checked == true) {
                    titleField.disabled = true;
                } else {
                    titleField.disabled = false;
                }
            });
        }
        if (!data.store_title && scopeTitle) {
            scopeTitle.up(0).down('input[type="text"]').disabled = true;
            scopeTitle.checked = true;
        }
		if (data.amazon_s3_bucket) {
			scopeAttribute = $('downloadable_sample_'+data.id+'_amazon_s3_bucket');
			if (scopeAttribute) { scopeAttribute.value = data.amazon_s3_bucket; }
		}
		if (data.amazon_s3_object) {
			scopeAttribute = $('downloadable_sample_'+data.id+'_amazon_s3_object');
			if (scopeAttribute) { scopeAttribute.value = data.amazon_s3_object; }
		}
		if (data.amazon_cf_object) {
			scopeAttribute = $('downloadable_sample_'+data.id+'_amazon_cf_object');
			if (scopeAttribute) { scopeAttribute.value = data.amazon_cf_object; }
		}
		if (data.file_local_object) {
			scopeAttribute = $('downloadable_sample_'+data.id+'_file_local_object');
			if (scopeAttribute) { scopeAttribute.value = data.file_local_object; }
		}
		
        sampleUrl = $('downloadable_sample_'+data.id+'_url_type');

        if (!data.file_save) {
            data.file_save = [];
        }
        new Downloadable.FileUploader(
            'samples',
            data.id,
            sampleUrl.up('td').down('div.uploader'),
            'downloadable[sample]['+data.id+']',
            data.file_save,
            'downloadable_sample_'+data.id+'_file',
            <?php echo $this->getConfigJson() ?>
        );
        sampleUrl.advaiceContainer = 'downloadable_sample_'+data.id+'_container';
        sampleFile = $('downloadable_sample_'+data.id+'_file_type');
        sampleFile.advaiceContainer = 'downloadable_sample_'+data.id+'_container';
        $('downloadable_sample_'+data.id+'_file_save').advaiceContainer = 'downloadable_sample_'+data.id+'_container';

        this.itemCount++;
        this.bindRemoveButtons();
    },
    remove : function(event){
        var element = $(Event.findElement(event, 'tr'));
        alertAlreadyDisplayed = false;
        if(element){
            element.down('input[type="hidden"].__delete__').value = '1';
            element.down('div.flex').remove();
            element.addClassName('no-display');
            element.addClassName('ignore-validate');
            element.hide();
        }
    },
    bindRemoveButtons : function(){
        var buttons = $$('tbody#sample_items_body .delete-sample-item');
        for(var i=0;i<buttons.length;i++){
            if(!$(buttons[i]).binded){
                $(buttons[i]).binded = true;
                Event.observe(buttons[i], 'click', this.remove.bind(this));
            }
        }
        var selects = $$('tbody#sample_items_body .downloadplus_searchable_select');
        for(var i=0;i<selects.length;i++){
	        if (!$(selects[i]).binded){
				$(selects[i]).binded = true;
				new Chosen ($(selects[i]), {width:'100%', search_contains:true, no_results_text:'<?php echo $this->__('No results match') ?>'});
	        }
        }       
    },
    testSampleUrl : function(id){
        var request = {url:null,type:null};
        if (el = $$('input[name="downloadable[sample]['+id+'][type]"]:checked')) {
            request.type = (el.length>0)?el.first().value:null;
        }
        switch (request.type) {
           	case 'aws-s3':
               	if (el = $('downloadable_sample_'+id+'_amazon_s3_bucket')) {
                   	request.url = el.value+'|'+$('downloadable_sample_'+id+'_amazon_s3_file').value;
               	} else {
                   	request.url = $('downloadable_sample_'+id+'_amazon_s3_object').value;
               	}
               	break;
           	case 'aws-cf':
                request.url = $('downloadable_sample_'+id+'_amazon_cf_object').value;
               	break;
            default:
                request.url = $('downloadable_sample_'+id+'_sample_url').value;
                break;
        }
        this.testUrl(request);
    },
    testUrl: function(request){
        if (request.type && request.url) {
            request.form_key = '<?php echo $this->getFormKey() ?>';
            request.store = '<?php echo Mage::helper('downloadplus')->getStoreId() ?>';
            new Ajax.Request('<?php echo $this->getTestUrlAction() ?>', {
                	method: 'post',
                	parameters: request, 
                	onSuccess: function(transport){
                			var response = transport.responseText.evalJSON();
                			if (response.redirect) {
                    			if (response.object) {
                        			new Ajax.Request(response.redirect, {
                            				method: 'post',
                            				parameters: response.object,
                            				onSuccess: function(transport){
                                				var response = transport.responseText;
                                    			var wnd = window.open();
                                				wnd.document.write(response);
                            				}
                            			});
                    			} else {
                        			var wnd = window.open();
                        			wnd.location = response.redirect; 
                    			}
                			}                    	
                    	}
                });
        }
    }
}

sampleItems.bindRemoveButtons();

if($('add_sample_item')){
    Event.observe('add_sample_item', 'click', sampleItems.add.bind(sampleItems));
}

<?php foreach ($this->getSampleData() as $item): ?>
    sampleItems.add(<?php echo $item->toJson() ?>);
<?php endforeach; ?>

//]]>
</script>